[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "fluent-forever-v2"
version = "0.1.0"
description = "Spanish learning card creation system with modular pipeline architecture"
requires-python = ">=3.11"

dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=1.0.1",
    "Flask>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.8",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
    "types-requests>=2.31.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
]

lint = [
    "ruff>=0.1.8",
    "mypy>=1.7.0",
    "types-requests>=2.31.0",
]

[project.scripts]
ff-sync = "cli.entrypoints:sync_anki_all"
ff-media = "cli.entrypoints:media_generate"
ff-regen = "cli.entrypoints:regenerate_images"
ff-run = "cli.entrypoints:run_media_then_sync"
ff-preview = "cli.entrypoints:preview_server"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
]

[tool.ruff]
target-version = "py311"
line-length = 88
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "ARG002", # unused method argument
    "ARG001", # unused function argument
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["ARG", "S101"]  # Allow unused args and assert in tests
"**/__init__.py" = ["F401"]     # Allow unused imports in __init__ files

[tool.ruff.lint.isort]
known-first-party = ["cli", "core", "stages", "providers", "utils"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.coverage.run]
source = ["src"]
omit = [
    "src/**/__pycache__/*",
    "src/**/test_*.py",
    "tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
